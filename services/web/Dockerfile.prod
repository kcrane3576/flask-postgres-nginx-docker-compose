###########n# BUILDER #n###########nn# pull official base imagenFROM python:3.9.5-slim-buster@sha256:f42d92068b29045b6893da82032ca4fcf96193be5dcbdcfcba948489efa9e832 as buildernn# set work directorynWORKDIR /usr/src/appnn# set environment variablesnENV PYTHONDONTWRITEBYTECODE 1nENV PYTHONUNBUFFERED 1nn# install system dependenciesnRUN apt-get update && \n    apt-get install -y --no-install-recommends gcc flake8nn# lintnRUN pip install --upgrade pipnRUN pip install flake8==3.9.1nCOPY . /usr/src/app/nRUN flake8 --ignore=E501,F401 .nn# install python dependenciesnCOPY ./requirements.txt .nRUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txtnnn#########n# FINAL #n#########nn# pull official base imagenFROM python:3.9.5-slim-buster@sha256:f42d92068b29045b6893da82032ca4fcf96193be5dcbdcfcba948489efa9e832nn# create directory for the app usernRUN mkdir -p /home/appnn# create the app usernRUN addgroup --system app && adduser --system --group appnn# create the appropriate directoriesnENV HOME=/home/appnENV APP_HOME=/home/app/webnRUN mkdir $APP_HOMEnWORKDIR $APP_HOMEnn# install dependenciesnRUN apt-get update && apt-get install -y --no-install-recommends netcatnCOPY --from=builder /usr/src/app/wheels /wheelsnCOPY --from=builder /usr/src/app/requirements.txt .nRUN pip install --upgrade pipnRUN pip install --no-cache /wheels/*nn# copy entrypoint-prod.shnCOPY ./entrypoint.sh $APP_HOMEnn# copy projectnCOPY . $APP_HOMEnn# chown all the files to the app usernRUN chown -R app:app $APP_HOMEnn# change to the app usernUSER appnn# run entrypoint.shnENTRYPOINT ["/home/app/web/entrypoint.sh"]n